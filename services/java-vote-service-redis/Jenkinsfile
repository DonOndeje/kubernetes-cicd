node {
    def app

    stage('Clone repository') {
        checkout scm
    }


    stage('Package jar file with Maven') {
         dir('services/java-vote-service-redis') {
            withMaven(
                // Maven installation declared in the Jenkins "Global Tool Configuration"
                maven: 'M3') {
                // Run the maven build
                sh "mvn clean install"
            } 
         }
    }

    stage('Build image with Docker') {
        dir('services/java-vote-service-redis') {
            app = docker.build("services/java-vote-service-redis:${env.BUILD_NUMBER}")
        }
    }

   stage('Push image to container registry') {
        docker.withRegistry('https://sabbour.azurecr.io', 'acr-credentials') {
            app.push("${env.BUILD_NUMBER}")
            app.push("latest")
        }
    }

    stage("Deploy to UAT?") {
        dir('services/java-vote-service-redis/kubernetes') {
            def namespace = input(
                id: 'namespace', message: 'Deploy to UAT?', parameters: [
                [$class: 'TextParameterDefinition', defaultValue: 'uat', description: 'Environment', name: 'env']
            ])

            def imagetag="services/java-vote-service-redis:${env.BUILD_NUMBER}"

            // String replace in the deployment.yaml file
            sh "sed -i.bak s/XX_NAMESPACE_XX/:$namespace/g deployment.yaml"
            sh "sed -i.bak s/XX_NAMESPACE_XX/:$namespace/g namespace.yaml"
         
            // Execute kubectl commands to deploy namespace
            sh "kubectl apply --kubeconfig /var/lib/jenkins/config -f namespace.yaml"
       
            sh "sed -i.bak s/XX_IMAGETAG_XX/:$imagetag/g deployment.yaml"
            sh "kubectl apply --kubeconfig /var/lib/jenkins/config -f deployment.yaml"            
        }
    }

    stage("Deploy to Production?") {
        dir('services/java-vote-service-redis/kubernetes') {
            def namespace = input(
                id: 'namespace', message: 'Deploy to Production?', parameters: [
                [$class: 'TextParameterDefinition', defaultValue: 'prod', description: 'Environment', name: 'env']
            ])

           def imagetag="services/java-vote-service-redis:${env.BUILD_NUMBER}"

            // String replace in the deployment.yaml file
            sh "sed -i.bak s/XX_NAMESPACE_XX/:$namespace/g deployment.yaml"
            sh "sed -i.bak s/XX_NAMESPACE_XX/:$namespace/g namespace.yaml"
         
            // Execute kubectl commands to deploy namespace
            sh "kubectl apply --kubeconfig /var/lib/jenkins/config -f namespace.yaml"
       
            sh "sed -i.bak s/XX_IMAGETAG_XX/:$imagetag/g deployment.yaml"
            sh "kubectl apply --kubeconfig /var/lib/jenkins/config -f deployment.yaml"         
        }
    }
}