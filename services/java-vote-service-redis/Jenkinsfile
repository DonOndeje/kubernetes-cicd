node {
    def app

    stage('Clone repository') {
        checkout scm
    }


    stage('Package jar file with Maven') {
         dir('services/java-vote-service-redis') {
            withMaven(
                // Maven installation declared in the Jenkins "Global Tool Configuration"
                maven: 'M3') {
                // Run the maven build
                sh "mvn clean install"
            } 
         }
    }

    stage('Build image with Docker') {
         dir('services/java-vote-service-redis') {
        app = docker.build("services/java-vote-service-redis:${env.BUILD_NUMBER}")
         }
    }

   stage('Push image to container registry') {
        docker.withRegistry('https://sabbour.azurecr.io', 'acr-credentials') {
            app.push("${env.BUILD_NUMBER}")
            app.push("latest")
        }
    }

    stage("Deploy to UAT?") {
        def userInput = input(
            id: 'userInput', message: 'Deploy to UAT?', parameters: [
            [$class: 'TextParameterDefinition', defaultValue: 'uat', description: 'Environment', name: 'env']
        ])

        echo ("Env: "+userInput)

        /* Execute kubectl commands to deploy to UAT namespace */
        sh "kubectl create ns $userInput --kubeconfig /var/lib/jenkins/config"
    }

        stage("Deploy to Production?") {
        def userInput = input(
            id: 'userInput', message: 'Deploy to Production?', parameters: [
            [$class: 'TextParameterDefinition', defaultValue: 'prod', description: 'Environment', name: 'env']
        ])

        echo ("Env: "+userInput)

        /* Execute kubectl commands to deploy to Production namespace */
    }
}